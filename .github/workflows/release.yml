name: Release mod
run-name: >
  push ${{github.repository}} #${{ github.run_number }}
on:
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:
  
jobs:
  determine-version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion # id to later be referenced
        uses: gittools/actions/gitversion/execute@v0
  build:
    name: push ${{ needs.determine-version.outputs.semVer }}
    runs-on: windows-latest
    needs: determine-version
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
      ZIP_FILE: ${{ env.PROJECT_NAME }}-${{ env.SEMVER }}.zip
      PROJECT_NAME: jcdcdev.Eco.SeedStorage
      PROJECT_PATH: ./src/Server/${{ env.PROJECT_NAME }}.csproj
      BUILD_OUTPUT: ./build-output
      BUILD_ASSETS: ./build-assets/Mods/${{ env.PROJECT_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - name: Build project
        run: dotnet build ${{ env.PROJECT_PATH }} -o ${{ env.BUILD_OUTPUT }} --configuration Release -p:Version=${{ env.SEMVER }}
      - name: Copy Unity Assets
        run: |
          mkdir "${{ env.BUILD_ASSETS }}"
          cp "./src/Client/BuildOutput/${{ env.PROJECT_NAME }}.unity3d" "${{ env.BUILD_ASSETS }}"      
          cp "${{ env.BUILD_OUTPUT }}/${{ env.PROJECT_NAME }}.dll" "${{ env.BUILD_ASSETS }}"      
      - uses: vimtor/action-zip@v1
        with:
          files: ${{ env.BUILD_ASSETS }}
          dest: ${{ env.ZIP_FILE }}
      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ZIP_FILE }}
          path: ${{ env.ZIP_FILE }}
      # - uses: nickelc/upload-to-modio@v2.1.0
      #   with:
      #     token: ${{ secrets.MODIO_TOKEN }}
      #     game: ${{ secrets.MODIO_GAME }}
      #     mod: ${{ secrets.MODIO_MOD }}
      #     version: ${{ env.SEMVER }}
      #     path: ${ {github.repository }}.zip
      #     active: true
  # post-deploy:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - determine-version
  #     - build
  #   env:
  #     SEMVER: ${{ needs.determine-version.outputs.semVer }}
  #   name: post-deploy ${{ needs.determine-version.outputs.semVer }}
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Tag commit
  #       env:
  #         TAG: ${{ env.SEMVER }}
  #         MESSAGE: ""
  #       run: |
  #         git config user.name "${GITHUB_ACTOR}"
  #         git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
  #         git tag -a "${TAG}" -m "${MESSAGE}" -f
  #         git push origin "${TAG}"