name: Release mod
run-name: >
  push ${{github.repository}} #${{ github.run_number }}
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [closed]
  workflow_dispatch:
  
jobs:
  determine-version:
    runs-on: ubuntu-latest
    outputs:
      semVer: ${{ steps.gitversion.outputs.semVer }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0
        with:
          versionSpec: '5.x'
      - name: Determine Version
        id: gitversion # id to later be referenced
        uses: gittools/actions/gitversion/execute@v0
  build:
    name: push ${{ needs.determine-version.outputs.semVer }}
    runs-on: windows-latest
    needs: determine-version
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
      ASSET_NAME: jcdcdev.Eco.SeedStorage-${{ needs.determine-version.outputs.semVer }}
      PROJECT_NAME: jcdcdev.Eco.SeedStorage
      PROJECT_PATH: ./src/Server/jcdcdev.Eco.SeedStorage.csproj
      BUILD_OUTPUT: ./build-output
      MOD_OUTPUT: ./build-assets/Mods/jcdcdev.Eco.SeedStorage
      ARTIFACT_OUTPUT: ./build-assets
    outputs:
      assetName: ${{ env.ASSET_NAME }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: 7.0.x
      - name: Build project
        run: dotnet build ${{ env.PROJECT_PATH }} -o ${{ env.BUILD_OUTPUT }} --configuration Release -p:Version=${{ env.SEMVER }}
      - name: Copy Unity Assets
        run: |
          mkdir "${{ env.MOD_OUTPUT }}"
          cp "./src/Client/BuildOutput/${{ env.PROJECT_NAME }}.unity3d" "${{ env.MOD_OUTPUT }}"      
          cp "${{ env.BUILD_OUTPUT }}/${{ env.PROJECT_NAME }}.dll" "${{ env.MOD_OUTPUT }}"      
      - uses: vimtor/action-zip@v1
        with:
          files: ${{ env.ARTIFACT_OUTPUT }}
          dest: ${{ env.ASSET_NAME }}.zip
      - name: Upload package
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}
          path: ${{ env.ASSET_NAME }}.zip
  deploy:
    needs:
      - determine-version
      - build
    runs-on: ubuntu-latest
    env:
      SEMVER: ${{ needs.determine-version.outputs.semVer }}
      ASSET_NAME: ${{ needs.build.outputs.assetName }}
    steps:
      # - uses: actions/checkout@master
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download package
        uses: actions/download-artifact@v2
        with:
          name: ${{ env.ASSET_NAME }}
      - run: echo "previous_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo '')" >> $GITHUB_ENV
      - name: Generate changelog
        id: changelog
        uses: jaywcjlove/changelog-generator@main
        if: env.previous_tag
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          filter-author: (jcdcdev|dependabot|renovate\\[bot\\]|dependabot\\[bot\\]|Renovate Bot)
          filter: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'
      - name: Get the changelog
        run: echo "${{ steps.changelog.outputs.changelog }}"
      # - uses: nickelc/upload-to-modio@v2.1.0
      #   with:
      #     token: ${{ secrets.MODIO_TOKEN }}
      #     game: ${{ secrets.MODIO_GAME }}
      #     mod: ${{ secrets.MODIO_MOD }}
      #     version: ${{ env.SEMVER }}
      #     path: ${{ env.ASSET_NAME }}.zip
      #     active: true
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          name: ${{ env.SEMVER }}
          tag: ${{ env.SEMVER }}
          body: |
            ${{ steps.changelog.outputs.compareurl }}

            ${{ steps.changelog.outputs.changelog }}
  #   name: post-deploy ${{ needs.determine-version.outputs.semVer }}
  #   permissions:
  #     contents: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Tag commit
  #       env:
  #         TAG: ${{ env.SEMVER }}
  #         MESSAGE: ""
  #       run: |
  #         git config user.name "${GITHUB_ACTOR}"
  #         git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
  #         git tag -a "${TAG}" -m "${MESSAGE}" -f
  #         git push origin "${TAG}"